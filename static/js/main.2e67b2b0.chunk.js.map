{"version":3,"sources":["Recipe.js","Recipe2.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","index","text","src","alt","Recipe2","list","width","heigh","el","name","value","id","flag","app","Clarifai","App","apiKey","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","includes","getImage","getRecipes","a","fetch","response","json","data","hits","models","predict","FOOD_MODEL","then","outputs","concepts","onSubmit","e","preventDefault","type","onChange","target","label","uri","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2OAkBeA,EAfA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACvC,OACE,sBAAMC,UAAWC,IAAMC,OAAvB,UACE,6BAAKN,IACL,6BACGG,EAAYI,KAAI,SAACC,EAAWC,GAAZ,OACf,6BAAiBD,EAAWE,MAAnBD,QAGb,0CAAaR,KACb,qBAAKU,IAAMT,EAAOU,IAAI,SCKbC,EAfC,SAAC,GAAmB,IAAlBX,EAAiB,EAAjBA,MAAOY,EAAU,EAAVA,KACvB,OACE,sBAAMV,UAAWC,IAAMC,OAAvB,UACE,6BAAK,2BACL,qBAAKF,UAAU,SAASQ,IAAI,GAAGD,IAAKT,EAAOa,MAAM,QAAQC,MAAM,SAC/D,mCAAM,uBACN,6BACGF,EAAKP,KAAI,SAAAU,GAAE,OACV,+BAAiBA,EAAGC,KAApB,OAA8BD,EAAGE,MAAjC,OAASF,EAAGG,aCLlBC,G,MAAO,GAELC,EAAM,IAAIC,IAASC,IAAI,CAC5BC,OAAQ,qCA8DMD,MA3Df,WAEE,IAFa,EAKiBE,mBAAS,IAL1B,mBAKNC,EALM,KAKGC,EALH,OAMeF,mBAAS,IANxB,mBAMNG,EANM,KAMEC,EANF,OAOaJ,mBAAS,WAPtB,mBAONK,EAPM,KAOCC,EAPD,KASbC,qBAAU,WACLF,EAAMG,SAAS,SAChBC,IAEFC,MACC,CAACL,IAEJ,IAAMK,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCP,EAApC,mBAff,WAee,oBAdd,qCAaG,cACXQ,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBpB,EAAK,EACLO,EAAWa,EAAKC,MAJC,2CAAH,qDAOVP,EAAW,WACfb,EAAIqB,OAAOC,QAAQrB,IAASsB,WAAYd,GACvCe,MAAK,SAAAP,GACHlB,EAAK,EACLO,EAAWW,EAASQ,QAAQ,GAAGN,KAAKO,cAazC,OACE,sBAAK5C,UAAU,MAAf,UACE,uBAAM6C,SAPQ,SAAAC,GAChBA,EAAEC,iBACFnB,EAASH,IAKoBzB,UAAU,cAArC,UACA,qBAAKA,UAAU,OAAf,mEACE,uBAAOA,UAAU,aAAagD,KAAK,OAAOjC,MAAOU,EAAQwB,SAb1C,SAAAH,GACnBpB,EAAUoB,EAAEI,OAAOnC,UAaf,wBAAQf,UAAU,gBAAiBgD,KAAK,SAAxC,uBAEF,qBAAKhD,UAAU,UAAf,SACCiB,EAAO,cAAC,EAAD,CAASnB,MAAO6B,EAAOjB,KAAMa,IAAaA,EAAQpB,KAAI,SAAAD,GAAM,OAClE,cAAC,EAAD,CAAiCN,MAAOM,EAAOA,OAAOiD,MAAOtD,SAAUK,EAAOA,OAAOL,SACpFC,MAAOI,EAAOA,OAAOJ,MAAOC,YAAaG,EAAOA,OAAOH,aAD3CG,EAAOA,OAAOkD,cCjDpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfAa,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.2e67b2b0.chunk.js","sourcesContent":["import React from 'react';\nimport style from './recipe.module.css';\n\nconst Recipe = ({title, calories, image, ingredients}) => {  \n  return (\n    <div  className={style.recipe}>\n      <h1>{title}</h1>\n      <ol>\n        {ingredients.map((ingredient,index) => (\n          <li key={index}>{ingredient.text}</li>  \n        ))}\n      </ol>\n      <p>calories:{calories}</p>\n      <img src ={image} alt=\"\" />\n    </div>\n  )\n}\n\nexport default Recipe;\n ","import React from 'react';\nimport style from './recipe.module.css';\n\nconst Recipe2 = ({image, list}) => {\n  return (\n    <div  className={style.recipe}>\n      <h1>{\"Recognized Ingredients\"}</h1>\n      <img className='center' alt='' src={image} width='500px' heigh='auto'/>\n      <h3> {\"Name and Accuracy\"}</h3>     \n      <ol >\n        {list.map(el => (   \n          <li key={el.id}>{el.name}  : {el.value} %</li>  \n        ))}\n      </ol>\n    </div>\n  )\n}\n\nexport default Recipe2;\n ","import React, {useEffect, useState} from \"react\"; \nimport Clarifai from 'clarifai';\nimport Recipe from './Recipe';\nimport Recipe2 from './Recipe2';\nimport './App.css';\n\nlet flag = 0;\n\nconst app = new Clarifai.App({\n apiKey: '3b5f87699b934437bb5895d280263353'\n});\n\nfunction App() {\n  \n  const APP_ID = \"0ab474a2\";\n  const APP_KEY = \"af5797c3d30b77edc47c80a3ca335610\";\n \n  const [recipes, setRecipes] = useState([])\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n  \n  useEffect(() => {\n    if(query.includes('http')){\n      getImage()\n    }\n    getRecipes()\n  }, [query])\n  \n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n    const data = await response.json();\n    flag=0\n    setRecipes(data.hits)\n    }\n\n  const getImage = () => {\n    app.models.predict(Clarifai.FOOD_MODEL, query)\n    .then(response => {\n       flag=1\n       setRecipes(response.outputs[0].data.concepts)\n    })\n  }\n  \n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n  \n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search)\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n      <div className=\"text\"> Please type the name of a food or image url here => </div>\n        <input className=\"search-bar\" type='text' value={search} onChange={updateSearch} />\n        <button className=\"search-button\"  type=\"submit\">Search</button>\n      </form>\n      <div className=\"recipes\">\n      {flag ? <Recipe2 image={query} list={recipes}/> : recipes.map(recipe => \n        <Recipe key={recipe.recipe.uri } title={recipe.recipe.label} calories={recipe.recipe.calories} \n         image={recipe.recipe.image} ingredients={recipe.recipe.ingredients}\n        />  \n      )}\n      </div>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\"};"],"sourceRoot":""}